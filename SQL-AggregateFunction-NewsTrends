 ---Start by getting a feel for the hacker_news table!
---Let’s find the most popular Hacker News stories:

SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;

--First, find the total score of all the stories.
SELECT SUM(score)
FROM hacker_news;

--Find the individual users who have gotten combined scores of more than 200, and their combined scores.
SELECT user, SUM(score)
FROM hacker_news
GROUP BY 1
HAVING SUM(score) > 200
ORDER BY 2 DESC;

--How many times has each offending user posted this link?
SELECT user, COUNT(*)
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ%'
GROUP BY 1
ORDER BY 2 DESC;

--We want to categorize each story based on their source.
SELECT CASE
  WHEN url LIKE '%github%' THEN 'GitHub'
  WHEN url LIKE '%medium%' THEN 'Medium'
  WHEN url LIKE '%nytimes%' THEN 'New York Times'
  ELSE 'Others'
END AS 'Source'
FROM hacker_news;

--Add a column for the number of stories from each URL.

SELECT CASE
  WHEN url LIKE '%github%' THEN 'GitHub'
  WHEN url LIKE '%medium%' THEN 'Medium'
  WHEN url LIKE '%nytimes%' THEN 'New York Times'
  ELSE 'Others'
END AS 'Source', COUNT(*)
FROM hacker_news
GROUP BY 1;

--What’s the best time of the day to post a story on Hacker News?
SELECT timestamp
FROM hacker_news
LIMIT 10;

--6pm-8pm and 7am
SELECT strftime('%H', timestamp) AS 'Time', 
  ROUND(AVG(score),2) AS 'Average Score',
  COUNT(*) AS 'Number of Stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC;
